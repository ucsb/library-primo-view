/*
 * From https://github.com/alliance-pcsg/primo-explore-external-search
 *
 * With customizations, all commented below.
 */
angular
  .module('externalSearch', [])
  .value('searchTargets', [])
  .component('prmFacetAfter', {
      bindings: { parentCtrl: '<' },
      controller: ['externalSearchService', function (externalSearchService) {
        externalSearchService.controller = this.parentCtrl
        externalSearchService.addExtSearch()
      }]
  })
  .component('prmPageNavMenuAfter', {
    controller: ['externalSearchService', function (externalSearchService) {
      if (externalSearchService.controller) externalSearchService.addExtSearch()
    }]
  })
  .component('prmFacetExactAfter', {
      bindings: { parentCtrl: '<' },
      template: `
      <div ng-if="name === 'External Search'">
        <div ng-hide="$ctrl.parentCtrl.facetGroup.facetGroupCollapsed">
          <div class="section-content animate-max-height-variable" id="external-search">
            <div ng-repeat="target in targets" aria-live="polite" class="md-chip animate-opacity-and-scale facet-element-marker-local4">
              <div id="external-search-item" class="md-chip-content layout-row" role="button" tabindex="0">
                <strong dir="auto" title="{{ target.name }}">
                  <a ng-href="{{ target.url + target.mapping(queries, filters) }}" target="_blank">
                    <img ng-src="{{ target.img }}" width="20" height="20"/> {{ target.name }}
                  </a>
                  <span class="desc">{{target.desc}}</span>
                </strong>
              </div>
            </div>
          </div>
        </div>
      </div>`,
      controller: ['$scope', '$location', 'searchTargets', function ($scope, $location, searchTargets) {
        $scope.name = this.parentCtrl.facetGroup.name
        $scope.targets = searchTargets
        let query = $location.search().query
        let filter = $location.search().pfilter
        $scope.queries = Array.isArray(query) ? query : query ? [query] : false
        $scope.filters = Array.isArray(filter) ? filter : filter ? [filter] : false
        /*
        * Customized to replace "University of California" with "UC" in facets
        * 
        * Courtesy of UC Santa Cruz
        */
        if ($scope.name == 'institution') {
          // Once the institutions facets load, find them in the document.
          var institutionFacets = document.querySelector('[data-facet-group="institution"]');
          // Facets are created and destroyed in the DOM when the group is toggled so watch for clicks
          institutionFacets.addEventListener('click', function () {
            // There is a slight delay as Alma loads the facets, so check on a tight interval
            var i = 0;
            var institutionsInterval = window.setInterval(function () {
              var institutions = institutionFacets.getElementsByClassName('text-number-space');
              // When found, cycle through the institutions and replace the text as appropriate
              if (institutions.length > 0) {
                var _iteratorNormalCompletion2 = true;
                var _didIteratorError2 = false;
                var _iteratorError2 = undefined;

                try {
                  for (var _iterator2 = institutions[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                    var oneInst = _step2.value;

                    oneInst.textContent = oneInst.textContent.replace(',', '');
                    oneInst.textContent = oneInst.textContent.replace('University of California', 'UC');
                    oneInst.title = oneInst.title.replace(',', '');
                    oneInst.title = oneInst.title.replace('University of California', 'UC');
                    clearInterval(institutionsInterval);
                  }
                } catch (err) {
                  _didIteratorError2 = true;
                  _iteratorError2 = err;
                } finally {
                  try {
                    if (!_iteratorNormalCompletion2 && _iterator2.return) {
                      _iterator2.return();
                    }
                  } finally {
                    if (_didIteratorError2) {
                      throw _iteratorError2;
                    }
                  }
                }
              }
              // Only try 10 times before exiting.
              i > 10 ? clearInterval(institutionsInterval) : i++;
            }, 100);
          });
        } // End UC facet customization
      }]
  })
  .factory('externalSearchService', function () {
    return {
      get controller() {
        return this.prmFacetCtrl || false
      },
      set controller(controller) {
        this.prmFacetCtrl = controller
      },
      addExtSearch: function () {
        if (this.prmFacetCtrl.$stateParams.search_scope != 'CourseReserves') {
          var xx = this;
          if (xx.prmFacetCtrl.$stateParams.search_scope == 'wcat_profile') {
            xx.prmFacetCtrl.facetService.results.unshift({
              name: 'External Search',
              displayedType: 'exact',
              limitCount: 0,
              facetGroupCollapsed: false,
              values: undefined
            });
          }
          else {
            var checkExist = setInterval(function () {
              if ((xx.prmFacetCtrl.facetService.results[0] && xx.prmFacetCtrl.facetService.results[0].name != "External Search")) {
                if (xx.prmFacetCtrl.facetService.results.name != "External Search") {
                  xx.prmFacetCtrl.facetService.results.unshift({
                  name: 'External Search',
                  displayedType: 'exact',
                  limitCount: 0,
                  facetGroupCollapsed: false,
                  values: undefined
                  });
                }
                clearInterval(checkExist);
              }
            }, 50);
          }
        }
      }
    }
  })